-- MySQL Script generated by MySQL Workbench
-- 11/24/14 14:49:31
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema odgersberndtson
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema odgersberndtson
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `odgersberndtson` DEFAULT CHARACTER SET utf8 ;
USE `odgersberndtson` ;
-- En simpel kontrol af om skemaet for vores databaser er oprettet, her bruger vi utf8. Derefter vælger vi at den også skal tages i brug.
-- -----------------------------------------------------
-- Table `odgersberndtson`.`branch`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `odgersberndtson`.`branch` ;

CREATE TABLE IF NOT EXISTS `odgersberndtson`.`branch` (
  `mainCode` VARCHAR(45) NOT NULL,
  `subCode` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`mainCode`, `subCode`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- For at være sikker på at kunne få den rigtige tabel har vi sørget for at den allerførst "dropper", f.eks. i dette tilfælde
-- "branch" hvis den allerede eksistere. Dette gøres ved opretningen af alle væres tabeller.
-- I denne tabel har vi to værdier, "mainCode" og "subCode". Dette er brugt til firmaer til at forklare om hvilken
-- branche de arbejder med, f.eks. IT, og subCode er forklarende om hvad indenfor IT de arbejder med.
-- Begge er primære nøgler og må ikke være lig NULL.
-- Vi bruger InnoDB da den følger den databasetype vi har lært om.

-- -----------------------------------------------------
-- Table `odgersberndtson`.`company`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `odgersberndtson`.`company` ;

CREATE TABLE IF NOT EXISTS `odgersberndtson`.`company` (
  `companyName` VARCHAR(45) NOT NULL,
  `mainCode` VARCHAR(45) NOT NULL,
  `companyAddress` VARCHAR(45) NOT NULL,
  `companyPhone` VARCHAR(45) NOT NULL,
  `CEO` VARCHAR(45) NOT NULL,
  `CFO` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`companyName`),
  INDEX `mainCode_idx` (`mainCode` ASC),
  CONSTRAINT `mainCode`
    FOREIGN KEY (`mainCode`)
    REFERENCES `odgersberndtson`.`branch` (`mainCode`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- Denne del bruges til at oprette tabellen over firmaer. Den indeholder seks forskellige værdier, der allesammen ikke må være lig NULL. 
-- Vi har valgt at den primære nøgle skal være firmaets navn, da samme firma ikke skulle optræde flere gange i vores database.
-- Vi bruger et indeks fra "branch", da dette findes hurtigere. Dette har dog den negative effekt at det tager længere tid at opdatere,
-- men da det ikke er en værdi der skal opdateres særlig meget er det helt fint. 
-- Vi har en cascade funktion for at søge for, når vi ændre i denne bliver det også ændret i branch.

-- -----------------------------------------------------
-- Table `odgersberndtson`.`partner`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `odgersberndtson`.`partner` ;

CREATE TABLE IF NOT EXISTS `odgersberndtson`.`partner` (
  `partnerId` INT(11) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `job` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`partnerId`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- Her oprettes tabellen for partner. Den primære nøgle er det ID der tildeles partneren, med andre ord "partnerId". 
-- Vi tænkte at vi godt kunne komme ud i en situation hvor der var ansat to personer med samme navn.
-- Derfor kunne navnet ikke være den primære nøgle. 
-- I tabellen partner har vi fire forskellige værdier.


-- -----------------------------------------------------
-- Table `odgersberndtson`.`cases`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `odgersberndtson`.`cases` ;

CREATE TABLE IF NOT EXISTS `odgersberndtson`.`cases` (
  `CaseName` VARCHAR(45) NOT NULL,
  `companyName` VARCHAR(45) NOT NULL,
  `partnerId` INT(11) NOT NULL,
  PRIMARY KEY (`CaseName`),
  INDEX `companyName_idx` (`companyName` ASC),
  INDEX `partnerId_idx` (`partnerId` ASC),
  CONSTRAINT `companyName`
    FOREIGN KEY (`companyName`)
    REFERENCES `odgersberndtson`.`company` (`companyName`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `partnerId`
    FOREIGN KEY (`partnerId`)
    REFERENCES `odgersberndtson`.`partner` (`partnerId`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- Dette er for at oprette tabellen for cases. Vi har tre værdier, to VARCHARS og en Int. 
-- Vores primære nøgle er navnet på sagen. Både "companyName" og "partnerId" er foreign keys fra to andre tabeller.
-- I denne har vi ligeledes at hvis de opdateres, skal de også opdateres i deres egen tabel.
-- Derimod hvis man sletter dem, vil der ikke ske noget.

-- -----------------------------------------------------
-- Table `odgersberndtson`.`person`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `odgersberndtson`.`person` ;

CREATE TABLE IF NOT EXISTS `odgersberndtson`.`person` (
  `personId` INT(11) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `address` VARCHAR(45) NOT NULL,
  `education` VARCHAR(45) NOT NULL,
  `currentJob` VARCHAR(45) NOT NULL,
  `personPhone` VARCHAR(45) NOT NULL,
  `companyMail` VARCHAR(45) NOT NULL,
  `privateMail` VARCHAR(45) NOT NULL,
  `personCell` VARCHAR(45) NOT NULL,
  `note` VARCHAR(100) NOT NULL,
  `birthYear` DATE NOT NULL,
  `salary` INT(11) NOT NULL,
  PRIMARY KEY (`personId`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- Her oprettes tabellen for en person. Denne er en meget simpel tabel der ikke bruger andre tabeller, med derimod bliver brugt af andre.
-- Den indeholder en masse værdier for personer, heri tolv forskellige. 
-- Vi valgte at den skulle have en primær nøgle der blot var et ID, eftersom at der findes flere personer med samme navn.

-- -----------------------------------------------------
-- Table `odgersberndtson`.`candidate`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `odgersberndtson`.`candidate` ;

CREATE TABLE IF NOT EXISTS `odgersberndtson`.`candidate` (
  `personId` INT(11) NOT NULL,
  `CaseName` VARCHAR(45) NOT NULL,
  `status` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`personId`, `CaseName`),
  INDEX `CaseName_idx` (`CaseName` ASC),
  CONSTRAINT `CaseNameCandidate`
    FOREIGN KEY (`CaseName`)
    REFERENCES `odgersberndtson`.`cases` (`CaseName`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `candidateId`
    FOREIGN KEY (`personId`)
    REFERENCES `odgersberndtson`.`person` (`personId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- Her oprettes tabellen for candidate. Den har tre forskellige værdier, hvor personId og CaseName er primære nøgler
-- Udover dette bruger vi også personId og CaseName som foreigns keys. 

-- -----------------------------------------------------
-- Table `odgersberndtson`.`contactperson`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `odgersberndtson`.`contactperson` ;

CREATE TABLE IF NOT EXISTS `odgersberndtson`.`contactperson` (
  `contactId` INT(11) NOT NULL,
  `caseName` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `contactPhone` VARCHAR(45) NOT NULL,
  `contactCell` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`contactId`),
  INDEX `caseName_idx` (`caseName` ASC),
  INDEX `caseName1_idx` (`caseName` ASC),
  CONSTRAINT `caseName1`
    FOREIGN KEY (`caseName`)
    REFERENCES `odgersberndtson`.`cases` (`CaseName`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- Dette er for at oprette tabellen for contactpersoner. Denne tabel har 6 forskellige værdier, hvor contactId er den primære nøgle.
-- Den bruger så indeks for case, heri caseName. Dette er fordi contactPerson sidder på en bestemt sag, hvor der kan være flere contactpersoner.


-- -----------------------------------------------------
-- Table `odgersberndtson`.`personpjla`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `odgersberndtson`.`personpjla` ;

CREATE TABLE IF NOT EXISTS `odgersberndtson`.`personpjla` (
  `personId` INT(11) NOT NULL,
  `previousJobs` VARCHAR(45) NOT NULL,
  `language` VARCHAR(45) NOT NULL,
  INDEX `personId_idx` (`personId` ASC),
  CONSTRAINT `personId`
    FOREIGN KEY (`personId`)
    REFERENCES `odgersberndtson`.`person` (`personId`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- Dette er en tabel for tidligere jobs. Denne skulle bruges til at natural joine med person, for at kunne se alle de jobs
-- en person havde haft tidligere. Han har tre forskellige værdier. Vi bruger ikke nogen primær nøgle.
-- Der er brugt en foreign key fra person, netop personId. Dette er fordi vi denne tabel som en lang liste over tidligere jobs.

-- -----------------------------------------------------
-- Table `odgersberndtson`.`researcher`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `odgersberndtson`.`researcher` ;

CREATE TABLE IF NOT EXISTS `odgersberndtson`.`researcher` (
  `researcherId` INT(11) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `job` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`researcherId`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- Her oprettes tabellen for researcher. Der er fire forskellige værdier. Ligesom i partner har vi et id (researcherId), som
-- primær nøgle. Dette er af samme grund.


-- -----------------------------------------------------
-- Table `odgersberndtson`.`researcheroncase`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `odgersberndtson`.`researcheroncase` ;

CREATE TABLE IF NOT EXISTS `odgersberndtson`.`researcheroncase` (
  `researcherId` INT(11) NOT NULL,
  `CaseName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`researcherId`, `CaseName`),
  INDEX `researcherId2_idx` (`researcherId` ASC),
  INDEX `caseName2_idx` (`CaseName` ASC),
  CONSTRAINT `CaseName`
    FOREIGN KEY (`CaseName`)
    REFERENCES `odgersberndtson`.`cases` (`CaseName`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `researcherId`
    FOREIGN KEY (`researcherId`)
    REFERENCES `odgersberndtson`.`researcher` (`researcherId`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- Her oprettes en tabel ved navnet researcheroncase. Denne har ikke rigtigt sine egne værdier, men bruger to foreign keys.
-- Dette er for at kunne samle alle de reseachers der er på en sag, da det er muligt at have flere. 

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
